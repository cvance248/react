{"ast":null,"code":"var _jsxFileName = \"/Users/calebvance/Projects/react/src/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(props) {\n  _s();\n\n  const [count, setCount] = useState(0);\n\n  let increment = () => setCount(count + 1);\n\n  const [words, setWords] = useState('first');\n\n  let replace = item => {\n    setWords(item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello World \", props.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: words\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: replace\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"Q0U2jyw31P/d+CLS3C+6f9T4HHg=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","TodoList","props","count","setCount","increment","words","setWords","replace","item","name"],"sources":["/Users/calebvance/Projects/react/src/TodoList.js"],"sourcesContent":["import React, {useState} from 'react';\n\nfunction TodoList(props) {\n\n    const [count, setCount] = useState(0);\n    let increment = () => setCount(count + 1)\n\n    const [words, setWords] = useState('first')\n    let replace = (item) => {\n        setWords(item)\n    }\n   \n    return (\n        <div>\n            Hello World {props.name}\n            <br />\n            <span>{count}</span>\n            <button onClick={increment}>increment</button>\n            <p>{words}</p>\n            <input type=\"text\" onChange={replace} />\n        </div>\n    )\n}\n\nexport default TodoList;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAErB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;;EACA,IAAIK,SAAS,GAAG,MAAMD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA9B;;EAEA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,OAAD,CAAlC;;EACA,IAAIQ,OAAO,GAAIC,IAAD,IAAU;IACpBF,QAAQ,CAACE,IAAD,CAAR;EACH,CAFD;;EAIA,oBACI;IAAA,2BACiBP,KAAK,CAACQ,IADvB,eAEI;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,UAAOP;IAAP;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAQ,OAAO,EAAEE,SAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ,eAKI;MAAA,UAAIC;IAAJ;MAAA;MAAA;MAAA;IAAA,QALJ,eAMI;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAEE;IAA7B;MAAA;MAAA;MAAA;IAAA,QANJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GApBQP,Q;;KAAAA,Q;AAsBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}